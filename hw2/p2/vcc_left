CBMC version 5.10 (cbmc-5.10) 64-bit x86_64 linux
Parsing p2_left.c
Converting
Type-checking p2_left
Generating GOTO Program
Adding CPROVER library (x86_64)
Removal of function pointers and virtual functions
Generic Property Instrumentation
Adding nondeterministic initialization of static/global variables
Running with 8 object bits, 56 offset bits (default)
Starting Bounded Model Checking
size of program expression: 69 steps
simple slicing removed 5 assignments
Generated 2 VCC(s), 2 remaining after simplification

VERIFICATION CONDITIONS:

file p2_left.c line 32 function main
x == y
{-1} __CPROVER_dead_object#1 == NULL
{-2} __CPROVER_deallocated#1 == NULL
{-3} __CPROVER_malloc_is_new_array#1 == FALSE
{-4} __CPROVER_malloc_object#1 == NULL
{-5} __CPROVER_malloc_size#1 == 0ul
{-6} __CPROVER_memory_leak#1 == NULL
{-7} __CPROVER_next_thread_id#1 == 0ul
{-8} __CPROVER_pipe_count#1 == 0u
{-9} __CPROVER_rounding_mode!0#1 == 0
{-10} __CPROVER_thread_id!0#1 == 0ul
{-11} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-12} 2 + y!0@1#1 >= x!0@1#1 && x!0@1#1 >= -2 + y!0@1#1
{-13} \guard#1 == !(i!0@1#1 >= 11)
{-14} \guard#2 == !(x!0@1#1 >= y!0@1#1)
{-15} x!0@1#2 == 1 + x!0@1#1
{-16} x!0@1#3 == x!0@1#1
{-17} y!0@1#2 == x!0@1#3
{-18} y!0@1#3 == (\guard#2 ? y!0@1#1 : y!0@1#2)
{-19} x!0@1#4 == (\guard#2 ? x!0@1#2 : x!0@1#3)
{-20} i!0@1#2 == 1 + i!0@1#1
{-21} \guard#3 == !(i!0@1#2 >= 11)
{-22} \guard#4 == !(x!0@1#4 >= y!0@1#3)
{-23} x!0@1#5 == 1 + x!0@1#4
{-24} x!0@1#6 == x!0@1#4
{-25} y!0@1#4 == x!0@1#6
{-26} y!0@1#5 == (\guard#4 ? y!0@1#3 : y!0@1#4)
{-27} x!0@1#7 == (\guard#4 ? x!0@1#5 : x!0@1#6)
{-28} i!0@1#3 == 1 + i!0@1#2
{-29} y!0@1#6 == y!0@1#3
{-30} x!0@1#8 == x!0@1#4
{-31} i!0@1#4 == i!0@1#2
|--------------------------
{1} \guard#1 && !\guard#3 ==> x!0@1#8 == y!0@1#6

file p2_left.c line 36 function main
x == y
{-1} __CPROVER_dead_object#1 == NULL
{-2} __CPROVER_deallocated#1 == NULL
{-3} __CPROVER_malloc_is_new_array#1 == FALSE
{-4} __CPROVER_malloc_object#1 == NULL
{-5} __CPROVER_malloc_size#1 == 0ul
{-6} __CPROVER_memory_leak#1 == NULL
{-7} __CPROVER_next_thread_id#1 == 0ul
{-8} __CPROVER_pipe_count#1 == 0u
{-9} __CPROVER_rounding_mode!0#1 == 0
{-10} __CPROVER_thread_id!0#1 == 0ul
{-11} __CPROVER_threads_exited#1 == ARRAY_OF(FALSE)
{-12} 2 + y!0@1#1 >= x!0@1#1 && x!0@1#1 >= -2 + y!0@1#1
{-13} \guard#1 == !(i!0@1#1 >= 11)
{-14} \guard#2 == !(x!0@1#1 >= y!0@1#1)
{-15} x!0@1#2 == 1 + x!0@1#1
{-16} x!0@1#3 == x!0@1#1
{-17} y!0@1#2 == x!0@1#3
{-18} y!0@1#3 == (\guard#2 ? y!0@1#1 : y!0@1#2)
{-19} x!0@1#4 == (\guard#2 ? x!0@1#2 : x!0@1#3)
{-20} i!0@1#2 == 1 + i!0@1#1
{-21} \guard#3 == !(i!0@1#2 >= 11)
{-22} \guard#4 == !(x!0@1#4 >= y!0@1#3)
{-23} x!0@1#5 == 1 + x!0@1#4
{-24} x!0@1#6 == x!0@1#4
{-25} y!0@1#4 == x!0@1#6
{-26} y!0@1#5 == (\guard#4 ? y!0@1#3 : y!0@1#4)
{-27} x!0@1#7 == (\guard#4 ? x!0@1#5 : x!0@1#6)
{-28} i!0@1#3 == 1 + i!0@1#2
{-29} y!0@1#6 == y!0@1#3
{-30} x!0@1#8 == x!0@1#4
{-31} i!0@1#4 == i!0@1#2
{-32} y!0@1#7 == (\guard#3 ? y!0@1#5 : y!0@1#6)
{-33} x!0@1#9 == (\guard#3 ? x!0@1#7 : x!0@1#8)
{-34} i!0@1#5 == (\guard#3 ? i!0@1#3 : i!0@1#4)
{-35} y!0@1#8 == y!0@1#1
{-36} x!0@1#10 == x!0@1#1
{-37} i!0@1#6 == i!0@1#1
|--------------------------
{1} !\guard#1 ==> x!0@1#10 == y!0@1#8

